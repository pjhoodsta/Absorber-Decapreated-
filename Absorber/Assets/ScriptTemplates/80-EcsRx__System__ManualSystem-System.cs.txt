using System;
using System.Collections.Generic;
using System.Linq;
using EcsRx.Events;
using EcsRx.Extensions;
using EcsRx.Groups;
using EcsRx.Groups.Observable;
using EcsRx.Systems;
using EcsRx.Unity.Extensions;
using Game.Components;
using Game.Events;
using UniRx;


namespace Game.Systems
{
    public class #SCRIPTNAME# : IManualSystem
    {
        public IGroup Group { get; } = new Group(typeof(LevelComponent));
	#NOTRIM#
        private readonly IEventSystem _eventSystem;
        //private readonly IList<IDisposable> _subscriptions = new List<IDisposable>();

        public #SCRIPTNAME#(IEventSystem eventSystem)
        {
            _eventSystem = eventSystem;
        }

        public void StartSystem(IObservableGroup group)
        {
            //this.WaitForScene()
            //    .Subscribe(x =>
            //    {
            //       
            //    });
        }

        //public void StopSystem(IObservableGroup group)
        //{ _subscriptions.DisposeAll(); }
    }
    
}